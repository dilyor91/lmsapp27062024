package uz.momoit.lms_canvas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CourseWeekInfoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseWeekInfoAllPropertiesEquals(CourseWeekInfo expected, CourseWeekInfo actual) {
        assertCourseWeekInfoAutoGeneratedPropertiesEquals(expected, actual);
        assertCourseWeekInfoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseWeekInfoAllUpdatablePropertiesEquals(CourseWeekInfo expected, CourseWeekInfo actual) {
        assertCourseWeekInfoUpdatableFieldsEquals(expected, actual);
        assertCourseWeekInfoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseWeekInfoAutoGeneratedPropertiesEquals(CourseWeekInfo expected, CourseWeekInfo actual) {
        assertThat(expected)
            .as("Verify CourseWeekInfo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseWeekInfoUpdatableFieldsEquals(CourseWeekInfo expected, CourseWeekInfo actual) {
        assertThat(expected)
            .as("Verify CourseWeekInfo relevant properties")
            .satisfies(e -> assertThat(e.getTotalWeek()).as("check totalWeek").isEqualTo(actual.getTotalWeek()))
            .satisfies(e -> assertThat(e.getLessonPerWeek()).as("check lessonPerWeek").isEqualTo(actual.getLessonPerWeek()))
            .satisfies(e -> assertThat(e.getStartDate()).as("check startDate").isEqualTo(actual.getStartDate()))
            .satisfies(e -> assertThat(e.getWeekDayCount()).as("check weekDayCount").isEqualTo(actual.getWeekDayCount()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseWeekInfoUpdatableRelationshipsEquals(CourseWeekInfo expected, CourseWeekInfo actual) {
        assertThat(expected)
            .as("Verify CourseWeekInfo relationships")
            .satisfies(e -> assertThat(e.getCourse()).as("check course").isEqualTo(actual.getCourse()));
    }
}
