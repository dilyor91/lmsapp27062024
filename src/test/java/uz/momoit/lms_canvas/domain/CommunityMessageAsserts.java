package uz.momoit.lms_canvas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CommunityMessageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityMessageAllPropertiesEquals(CommunityMessage expected, CommunityMessage actual) {
        assertCommunityMessageAutoGeneratedPropertiesEquals(expected, actual);
        assertCommunityMessageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityMessageAllUpdatablePropertiesEquals(CommunityMessage expected, CommunityMessage actual) {
        assertCommunityMessageUpdatableFieldsEquals(expected, actual);
        assertCommunityMessageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityMessageAutoGeneratedPropertiesEquals(CommunityMessage expected, CommunityMessage actual) {
        assertThat(expected)
            .as("Verify CommunityMessage auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityMessageUpdatableFieldsEquals(CommunityMessage expected, CommunityMessage actual) {
        assertThat(expected)
            .as("Verify CommunityMessage relevant properties")
            .satisfies(e -> assertThat(e.getMessage()).as("check message").isEqualTo(actual.getMessage()))
            .satisfies(e -> assertThat(e.getSenderDate()).as("check senderDate").isEqualTo(actual.getSenderDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityMessageUpdatableRelationshipsEquals(CommunityMessage expected, CommunityMessage actual) {
        assertThat(expected)
            .as("Verify CommunityMessage relationships")
            .satisfies(e -> assertThat(e.getCommunity()).as("check community").isEqualTo(actual.getCommunity()));
    }
}
