package uz.momoit.lms_canvas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CourseWeekAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseWeekAllPropertiesEquals(CourseWeek expected, CourseWeek actual) {
        assertCourseWeekAutoGeneratedPropertiesEquals(expected, actual);
        assertCourseWeekAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseWeekAllUpdatablePropertiesEquals(CourseWeek expected, CourseWeek actual) {
        assertCourseWeekUpdatableFieldsEquals(expected, actual);
        assertCourseWeekUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseWeekAutoGeneratedPropertiesEquals(CourseWeek expected, CourseWeek actual) {
        assertThat(expected)
            .as("Verify CourseWeek auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseWeekUpdatableFieldsEquals(CourseWeek expected, CourseWeek actual) {
        assertThat(expected)
            .as("Verify CourseWeek relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getPublished()).as("check published").isEqualTo(actual.getPublished()))
            .satisfies(e -> assertThat(e.getWeekDate()).as("check weekDate").isEqualTo(actual.getWeekDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseWeekUpdatableRelationshipsEquals(CourseWeek expected, CourseWeek actual) {
        assertThat(expected)
            .as("Verify CourseWeek relationships")
            .satisfies(e -> assertThat(e.getCourse()).as("check course").isEqualTo(actual.getCourse()));
    }
}
