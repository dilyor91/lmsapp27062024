package uz.momoit.lms_canvas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CommunityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityAllPropertiesEquals(Community expected, Community actual) {
        assertCommunityAutoGeneratedPropertiesEquals(expected, actual);
        assertCommunityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityAllUpdatablePropertiesEquals(Community expected, Community actual) {
        assertCommunityUpdatableFieldsEquals(expected, actual);
        assertCommunityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityAutoGeneratedPropertiesEquals(Community expected, Community actual) {
        assertThat(expected)
            .as("Verify Community auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityUpdatableFieldsEquals(Community expected, Community actual) {
        assertThat(expected)
            .as("Verify Community relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getBody()).as("check body").isEqualTo(actual.getBody()))
            .satisfies(e -> assertThat(e.getSetAsAnonymous()).as("check setAsAnonymous").isEqualTo(actual.getSetAsAnonymous()))
            .satisfies(e -> assertThat(e.getOnlyMe()).as("check onlyMe").isEqualTo(actual.getOnlyMe()))
            .satisfies(e -> assertThat(e.getToAllStudents()).as("check toAllStudents").isEqualTo(actual.getToAllStudents()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityUpdatableRelationshipsEquals(Community expected, Community actual) {
        // empty method
    }
}
