package uz.momoit.lms_canvas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StudentOptionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentOptionAllPropertiesEquals(StudentOption expected, StudentOption actual) {
        assertStudentOptionAutoGeneratedPropertiesEquals(expected, actual);
        assertStudentOptionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentOptionAllUpdatablePropertiesEquals(StudentOption expected, StudentOption actual) {
        assertStudentOptionUpdatableFieldsEquals(expected, actual);
        assertStudentOptionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentOptionAutoGeneratedPropertiesEquals(StudentOption expected, StudentOption actual) {
        assertThat(expected)
            .as("Verify StudentOption auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentOptionUpdatableFieldsEquals(StudentOption expected, StudentOption actual) {
        assertThat(expected)
            .as("Verify StudentOption relevant properties")
            .satisfies(e -> assertThat(e.getOrdNum()).as("check ordNum").isEqualTo(actual.getOrdNum()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentOptionUpdatableRelationshipsEquals(StudentOption expected, StudentOption actual) {
        assertThat(expected)
            .as("Verify StudentOption relationships")
            .satisfies(e -> assertThat(e.getStudentQuestion()).as("check studentQuestion").isEqualTo(actual.getStudentQuestion()))
            .satisfies(e -> assertThat(e.getOption()).as("check option").isEqualTo(actual.getOption()));
    }
}
