package uz.momoit.lms_canvas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StudyTermAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudyTermAllPropertiesEquals(StudyTerm expected, StudyTerm actual) {
        assertStudyTermAutoGeneratedPropertiesEquals(expected, actual);
        assertStudyTermAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudyTermAllUpdatablePropertiesEquals(StudyTerm expected, StudyTerm actual) {
        assertStudyTermUpdatableFieldsEquals(expected, actual);
        assertStudyTermUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudyTermAutoGeneratedPropertiesEquals(StudyTerm expected, StudyTerm actual) {
        assertThat(expected)
            .as("Verify StudyTerm auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudyTermUpdatableFieldsEquals(StudyTerm expected, StudyTerm actual) {
        assertThat(expected)
            .as("Verify StudyTerm relevant properties")
            .satisfies(e -> assertThat(e.getTermName()).as("check termName").isEqualTo(actual.getTermName()))
            .satisfies(e -> assertThat(e.getStartDate()).as("check startDate").isEqualTo(actual.getStartDate()))
            .satisfies(e -> assertThat(e.getEndDate()).as("check endDate").isEqualTo(actual.getEndDate()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudyTermUpdatableRelationshipsEquals(StudyTerm expected, StudyTerm actual) {
        assertThat(expected)
            .as("Verify StudyTerm relationships")
            .satisfies(e -> assertThat(e.getStudyAcademicYear()).as("check studyAcademicYear").isEqualTo(actual.getStudyAcademicYear()));
    }
}
