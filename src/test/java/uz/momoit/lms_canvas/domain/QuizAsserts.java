package uz.momoit.lms_canvas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuizAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizAllPropertiesEquals(Quiz expected, Quiz actual) {
        assertQuizAutoGeneratedPropertiesEquals(expected, actual);
        assertQuizAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizAllUpdatablePropertiesEquals(Quiz expected, Quiz actual) {
        assertQuizUpdatableFieldsEquals(expected, actual);
        assertQuizUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizAutoGeneratedPropertiesEquals(Quiz expected, Quiz actual) {
        assertThat(expected)
            .as("Verify Quiz auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizUpdatableFieldsEquals(Quiz expected, Quiz actual) {
        assertThat(expected)
            .as("Verify Quiz relevant properties")
            .satisfies(e -> assertThat(e.getQuizName()).as("check quizName").isEqualTo(actual.getQuizName()))
            .satisfies(e -> assertThat(e.getTimeInMinute()).as("check timeInMinute").isEqualTo(actual.getTimeInMinute()))
            .satisfies(e -> assertThat(e.getPublished()).as("check published").isEqualTo(actual.getPublished()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizUpdatableRelationshipsEquals(Quiz expected, Quiz actual) {
        assertThat(expected)
            .as("Verify Quiz relationships")
            .satisfies(e -> assertThat(e.getCourse()).as("check course").isEqualTo(actual.getCourse()));
    }
}
