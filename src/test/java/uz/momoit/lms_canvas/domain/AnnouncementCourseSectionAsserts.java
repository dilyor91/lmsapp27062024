package uz.momoit.lms_canvas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AnnouncementCourseSectionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnouncementCourseSectionAllPropertiesEquals(
        AnnouncementCourseSection expected,
        AnnouncementCourseSection actual
    ) {
        assertAnnouncementCourseSectionAutoGeneratedPropertiesEquals(expected, actual);
        assertAnnouncementCourseSectionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnouncementCourseSectionAllUpdatablePropertiesEquals(
        AnnouncementCourseSection expected,
        AnnouncementCourseSection actual
    ) {
        assertAnnouncementCourseSectionUpdatableFieldsEquals(expected, actual);
        assertAnnouncementCourseSectionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnouncementCourseSectionAutoGeneratedPropertiesEquals(
        AnnouncementCourseSection expected,
        AnnouncementCourseSection actual
    ) {
        assertThat(expected)
            .as("Verify AnnouncementCourseSection auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnouncementCourseSectionUpdatableFieldsEquals(
        AnnouncementCourseSection expected,
        AnnouncementCourseSection actual
    ) {
        // empty method

    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnouncementCourseSectionUpdatableRelationshipsEquals(
        AnnouncementCourseSection expected,
        AnnouncementCourseSection actual
    ) {
        assertThat(expected)
            .as("Verify AnnouncementCourseSection relationships")
            .satisfies(e -> assertThat(e.getAnnouncement()).as("check announcement").isEqualTo(actual.getAnnouncement()))
            .satisfies(e -> assertThat(e.getCourse()).as("check course").isEqualTo(actual.getCourse()))
            .satisfies(e -> assertThat(e.getCourseSection()).as("check courseSection").isEqualTo(actual.getCourseSection()));
    }
}
