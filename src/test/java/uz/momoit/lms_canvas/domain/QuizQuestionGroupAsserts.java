package uz.momoit.lms_canvas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuizQuestionGroupAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizQuestionGroupAllPropertiesEquals(QuizQuestionGroup expected, QuizQuestionGroup actual) {
        assertQuizQuestionGroupAutoGeneratedPropertiesEquals(expected, actual);
        assertQuizQuestionGroupAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizQuestionGroupAllUpdatablePropertiesEquals(QuizQuestionGroup expected, QuizQuestionGroup actual) {
        assertQuizQuestionGroupUpdatableFieldsEquals(expected, actual);
        assertQuizQuestionGroupUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizQuestionGroupAutoGeneratedPropertiesEquals(QuizQuestionGroup expected, QuizQuestionGroup actual) {
        assertThat(expected)
            .as("Verify QuizQuestionGroup auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizQuestionGroupUpdatableFieldsEquals(QuizQuestionGroup expected, QuizQuestionGroup actual) {
        assertThat(expected)
            .as("Verify QuizQuestionGroup relevant properties")
            .satisfies(e -> assertThat(e.getQuestionCount()).as("check questionCount").isEqualTo(actual.getQuestionCount()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizQuestionGroupUpdatableRelationshipsEquals(QuizQuestionGroup expected, QuizQuestionGroup actual) {
        assertThat(expected)
            .as("Verify QuizQuestionGroup relationships")
            .satisfies(e -> assertThat(e.getQuiz()).as("check quiz").isEqualTo(actual.getQuiz()))
            .satisfies(e -> assertThat(e.getQuestionGroup()).as("check questionGroup").isEqualTo(actual.getQuestionGroup()));
    }
}
