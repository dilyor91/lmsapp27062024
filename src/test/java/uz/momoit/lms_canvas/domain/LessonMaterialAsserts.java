package uz.momoit.lms_canvas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LessonMaterialAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLessonMaterialAllPropertiesEquals(LessonMaterial expected, LessonMaterial actual) {
        assertLessonMaterialAutoGeneratedPropertiesEquals(expected, actual);
        assertLessonMaterialAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLessonMaterialAllUpdatablePropertiesEquals(LessonMaterial expected, LessonMaterial actual) {
        assertLessonMaterialUpdatableFieldsEquals(expected, actual);
        assertLessonMaterialUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLessonMaterialAutoGeneratedPropertiesEquals(LessonMaterial expected, LessonMaterial actual) {
        assertThat(expected)
            .as("Verify LessonMaterial auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLessonMaterialUpdatableFieldsEquals(LessonMaterial expected, LessonMaterial actual) {
        assertThat(expected)
            .as("Verify LessonMaterial relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getLessonFileType()).as("check lessonFileType").isEqualTo(actual.getLessonFileType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLessonMaterialUpdatableRelationshipsEquals(LessonMaterial expected, LessonMaterial actual) {
        assertThat(expected)
            .as("Verify LessonMaterial relationships")
            .satisfies(e -> assertThat(e.getAttachment()).as("check attachment").isEqualTo(actual.getAttachment()))
            .satisfies(e -> assertThat(e.getLesson()).as("check lesson").isEqualTo(actual.getLesson()));
    }
}
