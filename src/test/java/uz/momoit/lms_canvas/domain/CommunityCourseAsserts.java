package uz.momoit.lms_canvas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CommunityCourseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityCourseAllPropertiesEquals(CommunityCourse expected, CommunityCourse actual) {
        assertCommunityCourseAutoGeneratedPropertiesEquals(expected, actual);
        assertCommunityCourseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityCourseAllUpdatablePropertiesEquals(CommunityCourse expected, CommunityCourse actual) {
        assertCommunityCourseUpdatableFieldsEquals(expected, actual);
        assertCommunityCourseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityCourseAutoGeneratedPropertiesEquals(CommunityCourse expected, CommunityCourse actual) {
        assertThat(expected)
            .as("Verify CommunityCourse auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityCourseUpdatableFieldsEquals(CommunityCourse expected, CommunityCourse actual) {
        // empty method

    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityCourseUpdatableRelationshipsEquals(CommunityCourse expected, CommunityCourse actual) {
        assertThat(expected)
            .as("Verify CommunityCourse relationships")
            .satisfies(e -> assertThat(e.getCommunity()).as("check community").isEqualTo(actual.getCommunity()))
            .satisfies(e -> assertThat(e.getCourse()).as("check course").isEqualTo(actual.getCourse()));
    }
}
