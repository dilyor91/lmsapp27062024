entity Course {
    courseName String required
    courseCode String required
    courseImagePath String 
    courseStartDate Instant required
    courseEndDate Instant required
    courseFormat String required
    published Boolean required
    selfEnrollment Boolean
    selfEnrollmentCode String
    storageQuota Integer required
    status Boolean required
}

entity CourseSection {
    sectionName String required
}

entity Accounts {
    username String required
    fullName String required
    sortableName String required
    avatarImageUrl String
    phone String required
    locale String
    gender String required
    userType UserType required
    userStatus UserStatus required
}

entity Enrollment {
   enrollmentStatus EnrollmentStatusEnum required
   lastActivityAt Instant
   enrollmentDate Instant
}

entity User{

}

entity Announcement {
   title String required
   content String required
   availableFromDate Instant
   availableUntilDate Instant
   published Boolean
}

entity CalendarEvent {
    title String
    content String
    date Instant
    startTime Integer
    endTime Integer
    location String
    address String
    eventFrequency EventFrequency 
}

entity CalendarTodo{
    title String
    date Instant
    time String
    details String
}

entity WikiPage {
    title String 
    content String
    whoAllowed WhoAllowed
    addToStudents Boolean
    addToStudentsDate Instant
    publishedAt Instant
    published Boolean
    notifyUsersChanges Boolean
}

entity Student {
   firstName String required
   lastName String required
   middleName String required
   gender String required
   birthdate String required
   phoneNumber String
   email String required
   hemisId Long 
   passportNumber String required
   jshshir String required
   isActive Boolean
   tutionType TutionTypeEnum
   nationality String
   country String
   city String
   region String
   addressLine String
   course Integer
   semester Integer
   educationLanguage EducationLanguage
   educationType EducationType
   educationForm EducationForm
}

entity Teacher {
   firstName String required
   lastName String required
   middleName String
   gender GenderEnum required
   birthdate String required
   phoneNumber String
   email String required
   passportNumber String required
   jshshir String required
   isActive Boolean
   nationality String
   country String
   city String
   region String
   addressLine String
   position PositionEnum
   academicDegree AcademicDegreeEnum
   academicTitle AcademicTitleEnum
}

entity StudyAcademicYear {
   fromDate Instant
   endDate Instant
}

enum PositionEnum {
  ASSISTENT,
  KATTA_OQITUVCHI,
  DOTSENT,
  PROFESSOR,
  KAFEDRA_MUDIRI
}

enum AcademicDegreeEnum {
   ILMIY_DARAJASIZ,
   PHD,
   FAN_DOCTORI
}

enum AcademicTitleEnum {
   ILMIY_UNVONSIZ,
   DOTSENT,
   PROFESSOR
}

enum GenderEnum {
   MALE, FEMALE
}

enum TutionTypeEnum {
   GRANT, KONTRAKT
}

enum EducationLanguage {
   UZBEK, RUSSIAN, ENGLISH
}

enum EducationType {
   KUNDUZGI, KECHKI, SIRTQI
}

enum EducationForm {
   BAKALAVR, MAGISTR 
}

enum WhoAllowed{
   ONLY_TEACHERS, TEACHER_AND_STUDENTS, ANYONE
}

enum EventFrequency {
    NOREPEAT, DAILY, WEEKLY
}

enum EnrollmentStatusEnum {
   ACTIVE, REJECTED, PENDING
}

enum UserType {
  STUDENT, TEACHER
}

enum UserStatus {
  ACTIVE, PENDING, BLOCKED
}

relationship OneToOne {
  Teacher{user} to User
  Course{user} to User
  Student{studyAcademicYear} to StudyAcademicYear
}

entity Faculty {
   name String
}

entity Speciality {
   name String
}

entity Group {
   name String 
}

entity Department {
   name String
}

entity QuestionGroup {
   name String required
}

entity Question {
   questionText String required
   point Integer 
}

entity Option {
   optionText String required
   isCorrect Boolean required
}

entity Quiz {
   quizName String required
   timeInMinute Integer required
   published Boolean
}

entity QuizQuestionGroup {
   questionCount Integer
}

entity QuizCourseSection {
   startDate Instant required
   endDate Instant required
}

enum QuizSessionEnum {
   IN_PROGRESS, FINISHED
}

entity QuizSession {
   startTime Instant 
   endTime Instant
   quizSessionEnum QuizSessionEnum 
}

entity StudentOption {
    ordNum Integer
}

entity StudentQuestion {
    ordNum Integer 
}

entity StudentAnswerQuestion {
    isCorrect Boolean
}

entity QuizResult {
    point Integer
    totalQuestionCnt Integer 
    correctAnswerCnt Integer 
    wrongAnswerCnt Integer 
}

enum LessonTypeEnum {
    Lecture, Practice, Seminar, Lab
}

entity Lesson {
  lessonTitle String required
  startPlanDate Instant required
  actualLessonDate Instant
  lessonType LessonTypeEnum required
  videoUrl String
}

enum AttendanceEnum {
   PRESENT, LATE, ABSENT
}

entity Attendance {
   attendanceEnum AttendanceEnum
}

entity StudyTerm {
   termName String required
   startDate Instant required
   endDate Instant required
   status Boolean required
}

enum SubmissionTypeEnum {
    ONLINE, PAPER
}

entity Assignment {
    name String required
    content String
    points Float
    submissionType SubmissionTypeEnum
    allowedAttempts Integer
    published Boolean
}

entity AssignmentCourseSection {
    startDate Instant
    endDate Instant
}

entity AnnouncementCourseSection {
    
}

entity SubmissionAssignment {
   submissionDate Instant
   content String
   comment String 
   attempsNumber Integer
}

entity Grade {
    point Integer
    gradedDate Instant
}

relationship OneToOne {
   Grade{submissionAssignment} to SubmissionAssignment
}

relationship ManyToOne {
  Grade{teacher} to Teacher
  Grade{assignment} to Assignment
}

relationship ManyToOne {
   SubmissionAssignment{student} to Student
   SubmissionAssignment{course} to Course
   SubmissionAssignment{assignment} to Assignment
   SubmissionAssignment{attachment} to Attachment
}

relationship ManyToOne {
   AssignmentCourseSection{assignment} to Assignment
   AssignmentCourseSection{course} to Course
   AssignmentCourseSection{courseSection} to CourseSection
   
   AnnouncementCourseSection{announcement} to Announcement
   AnnouncementCourseSection{course} to Course
   AnnouncementCourseSection{courseSection} to CourseSection
   Announcement{attachment} to Attachment
}


relationship ManyToOne {
   StudyTerm{studyAcademicYear} to StudyAcademicYear
}

relationship ManyToOne {
   Attendance{student} to Student
   Attendance{lesson} to Lesson
   Lesson{course} to Course
}

relationship ManyToOne {
   QuizSession{student} to Student
   QuizSession{quiz} to Quiz
   StudentQuestion{quizSession} to QuizSession
   StudentQuestion{question} to Question
   StudentOption{studentQuestion} to StudentQuestion
   StudentOption{option} to Option
   StudentAnswerQuestion{question} to Question
   StudentAnswerQuestion{option} to Option
   StudentAnswerQuestion{quizSession} to QuizSession
   QuizResult{quiz} to Quiz
   QuizResult{student} to Student
   QuizResult{quizSession} to QuizSession
}


relationship ManyToOne {
   QuestionGroup{course} to Course
   Question{questionGroup} to QuestionGroup
   Option{question} to Question
   Quiz{course} to Course
   QuizQuestionGroup{quiz} to Quiz
   QuizQuestionGroup{questionGroup} to QuestionGroup
   QuizCourseSection{course} to Course
   QuizCourseSection{courseSection} to CourseSection
   QuizCourseSection{quiz} to Quiz
}

entity CourseWeekInfo {
    totalWeek Integer
    lessonPerWeek Integer
    startDate Instant
    weekDayCount Integer
}

entity CourseWeek {
   name String
   published Boolean
   weekDate Instant
}

enum LessonFileTypeEnum {
   VIDEO, PDF, FILE, SOCIAL_MEDIA, WEB_LINK, TEXT
}

entity LessonMaterial {
   title String
   description String
   lessonFileType LessonFileTypeEnum
}

entity Building {
   name String required
   description String
   address String
   status Boolean
}

entity Room {
   name String
   description String
   capacity Integer
   status Boolean
}

entity TimeTable{
    weekNumber Integer
    weekDayNumber Integer
    pairNumber Integer
    actialDate Instant
}
relationship ManyToOne {
    TimeTable{course} to Course
    TimeTable{teacher} to Teacher
    TimeTable{building} to Building
    TimeTable{room} to Room
    TimeTable{studyTerm} to StudyTerm
}


relationship ManyToOne {
  Building{faculty} to Faculty
  Room{building} to Building
}


relationship ManyToOne {
   LessonMaterial {lesson} to Lesson
}

entity Attachment {}

relationship OneToOne {
    CourseWeekInfo {course} to Course
    LessonMaterial {attachment} to Attachment
}

relationship ManyToOne{
    CourseWeek{course} to Course
    Lesson{courseWeek} to CourseWeek
}

relationship ManyToOne {
    Enrollment{student} to Student
    CourseSection{course} to Course
    Enrollment{courseSection} to CourseSection
    Enrollment{course} to Course
    Announcement{course} to Course
    CalendarEvent{user} to User
    CalendarTodo{user} to User
    WikiPage{course} to Course
    Student{user} to User
    Student{faculty} to Faculty
    Student{speciality} to Speciality
    Student{group} to Group
    Speciality{faculty} to Faculty
    Group{speciality} to Speciality
    Teacher{faculty} to Faculty
    Teacher{department} to Department
}

entity AssignmentComment {
   comment String required
   commentDate Instant required
}

relationship ManyToOne {
   AssignmentComment{submissionAssignment} to SubmissionAssignment
   AssignmentComment{assignment} to Assignment
   AssignmentComment{student} to Student
   AssignmentComment{teacher} to Teacher
}

enum NotificationType {
    ASSIGNMENT,
    QUIZ,
    SUBMISSION_ASSIGNMENT
}

entity Notification {
    message String
    readDate Instant
    read Boolean
    notificationType NotificationType
}

entity AnnouncementStudentRead {
   read Boolean
   readAt Instant
}

relationship ManyToOne {
   AnnouncementStudentRead{announcement} to Announcement
   AnnouncementStudentRead{student} to Student
}

relationship ManyToOne {
    Notification{quiz} to Quiz
    Notification{assignment} to Assignment
    Notification{submissionAssignment} to SubmissionAssignment
    Notification{student} to Student
    Notification{teacher} to Teacher
}

// Set pagination options
paginate  Course, CourseSection, Enrollment, Accounts, 
Assignment, Announcement, CalendarEvent, WikiPage,
Student, CalendarTodo,
Faculty, Speciality, Group, StudyAcademicYear,
Teacher, Department,
QuestionGroup, Question, Option,
Quiz, QuizQuestionGroup, QuizCourseSection,
QuizSession, StudentOption, StudentQuestion,
StudentAnswerQuestion, QuizResult, Lesson, Attendance,
CourseWeekInfo, CourseWeek, LessonMaterial, SubmissionAssignment, Grade, AssignmentComment, 
AnnouncementCourseSection, Building, Room, AnnouncementStudentRead, TimeTable with pagination

// Use Data Transfer Objects (DTO)
dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
